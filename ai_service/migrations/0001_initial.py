# Generated by Django 5.2.1 on 2025-05-30 21:57

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ForecastData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faskes_id_temp', models.CharField(db_index=True, help_text='Temporary Faskes ID. Replace with ForeignKey later.', max_length=100)),
                ('forecast_period_start', models.DateField(db_index=True)),
                ('forecast_period_end', models.DateField(db_index=True)),
                ('input_historical_patient_json', models.JSONField(blank=True, help_text='Summary of historical patient data used', null=True)),
                ('input_seasonal_disease_info', models.TextField(blank=True, null=True)),
                ('input_external_data_json', models.JSONField(blank=True, help_text='Weather, local events, mudik calendar data used', null=True)),
                ('predicted_staffing_demand_json', models.JSONField(help_text="JSON: {'Dokter Umum': 5, 'Perawat': 10, ...}")),
                ('predicted_cost_min_rp', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('predicted_cost_max_rp', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('peak_period_alerts_recommendations', models.TextField(blank=True, null=True)),
                ('raw_ai_response', models.TextField(blank=True, help_text='Raw response from AI for debugging', null=True)),
                ('ai_model_name', models.CharField(blank=True, help_text='e.g., gemini-1.5-flash-latest', max_length=100, null=True)),
                ('generated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Demand Forecast Data',
                'verbose_name_plural': 'Demand Forecast Data',
                'ordering': ['-generated_at'],
                'indexes': [models.Index(fields=['faskes_id_temp', 'forecast_period_start', 'forecast_period_end'], name='ai_service__faskes__ffeb9b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_staffing_demand_json', models.JSONField(blank=True, help_text='Actual staffing recorded by Faskes', null=True)),
                ('accuracy_score_json', models.JSONField(blank=True, help_text='Detailed accuracy scores, e.g., MAPE per role', null=True)),
                ('overall_accuracy_metric', models.FloatField(blank=True, help_text='A single summary metric if applicable', null=True)),
                ('faskes_feedback_notes', models.TextField(blank=True, help_text='Qualitative feedback from Faskes on the forecast', null=True)),
                ('logged_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('forecast_data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='performance_log', to='ai_service.forecastdata')),
            ],
            options={
                'verbose_name': 'Model Performance Log',
                'verbose_name_plural': 'Model Performance Logs',
                'ordering': ['-logged_at'],
            },
        ),
    ]
