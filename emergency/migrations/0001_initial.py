# Generated by Django 5.2.1 on 2025-05-31 16:17

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Contoh: Logistik, Administrasi, Transportasi, Dapur Umum', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Kategori Tugas Relawan',
                'verbose_name_plural': 'Kategori Tugas Relawan',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.EmailField(help_text='Email ini akan digunakan untuk komunikasi.', max_length=254, unique=True)),
                ('phone_number', models.CharField(help_text='Nomor HP/WA aktif.', max_length=20)),
                ('address', models.TextField(blank=True, help_text='Alamat domisili saat ini.', null=True)),
                ('id_number', models.CharField(blank=True, help_text='Nomor KTP/SIM/Identitas Lain (untuk verifikasi).', max_length=50, null=True)),
                ('emergency_contact_name', models.CharField(help_text='Nama kontak darurat.', max_length=100)),
                ('emergency_contact_phone', models.CharField(help_text='Nomor telepon kontak darurat.', max_length=20)),
                ('has_completed_basic_training', models.BooleanField(default=False, help_text='Konfirmasi telah membaca/menyelesaikan modul training dasar respons bencana (online 30 menit).')),
                ('skills_description', models.TextField(blank=True, help_text='Keahlian relevan (mis: menyetir, P3K dasar, memasak, entri data).', null=True)),
                ('is_profile_verified_by_admin', models.BooleanField(default=False, help_text='Apakah profil relawan sudah diverifikasi oleh admin?')),
                ('admin_verification_notes', models.TextField(blank=True, help_text='Catatan internal admin terkait verifikasi profil.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Profil Relawan',
                'verbose_name_plural': 'Profil Relawan',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disaster_type', models.CharField(help_text='Contoh: Gempa Bumi, Banjir, Wabah Penyakit', max_length=100)),
                ('location_description', models.CharField(help_text='Deskripsi singkat lokasi terdampak utama', max_length=255)),
                ('severity_level', models.IntegerField(choices=[(1, 'Level 1 (Siaga)'), (2, 'Level 2 (Waspada)'), (3, 'Level 3 (Awas/Darurat Tinggi)')], default=1)),
                ('affected_regions_input', models.TextField(help_text='Daftar wilayah terdampak (Kabupaten/Kota), pisahkan dengan koma. Misal: Kab. Cianjur, Kota Palu')),
                ('description', models.TextField(blank=True, help_text='Deskripsi tambahan mengenai situasi darurat', null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('activation_time', models.DateTimeField(blank=True, null=True)),
                ('deactivation_time', models.DateTimeField(blank=True, null=True)),
                ('triggered_by_api', models.BooleanField(default=False, help_text='Apakah dipicu otomatis oleh API BNPB/BPBD?')),
                ('api_alert_details', models.JSONField(blank=True, help_text='Detail alert dari API jika ada', null=True)),
                ('matching_acceleration_enabled', models.BooleanField(default=False, help_text='Apakah akselerasi pencocokan SDM diaktifkan untuk kejadian ini?')),
                ('expanded_matching_radius_km', models.PositiveIntegerField(blank=True, help_text='Radius pencocokan yang diperluas dalam KM. Kosongkan jika menggunakan radius standar.', null=True)),
                ('ai_regional_risk_assessment_results_json', models.JSONField(blank=True, help_text="Hasil penilaian risiko dari AI untuk wilayah terdampak. Format: [{'region': 'nama', 'level': 'Tinggi', ...}]", null=True)),
                ('ai_pre_positioning_recommendations_text', models.TextField(blank=True, help_text='Rekomendasi pre-positioning SDM atau sumber daya dari AI.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manually_triggered_by', models.ForeignKey(blank=True, help_text='Admin yang memicu secara manual', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_emergencies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kejadian Darurat',
                'verbose_name_plural': 'Kejadian Darurat',
                'ordering': ['-activation_time'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyFundRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requested_amount', models.PositiveIntegerField(choices=[(10000000, 'Rp 10.000.000'), (25000000, 'Rp 25.000.000'), (50000000, 'Rp 50.000.000')], help_text='Jumlah dana darurat yang diajukan (sesuai level yang disetujui).')),
                ('purpose_description', models.TextField(help_text='Deskripsi singkat tujuan penggunaan dana (mis: pembelian obat darurat, operasional ambulans, APD tambahan).')),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Menunggu Persetujuan'), ('APPROVED', 'Disetujui'), ('REJECTED', 'Ditolak'), ('DISBURSED', 'Telah Dicairkan'), ('REPORTED', 'Laporan Diterima')], default='PENDING', max_length=20)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Catatan dari admin terkait persetujuan/penolakan.', null=True)),
                ('disbursement_date', models.DateTimeField(blank=True, null=True)),
                ('disbursement_proof', models.FileField(blank=True, help_text='Opsional: Bukti transfer atau pencairan dana.', null=True, upload_to='disbursement_proofs/')),
                ('spending_report_file', models.FileField(blank=True, help_text='File laporan penggunaan dana (PDF, Excel, dll.).', null=True, upload_to='spending_reports/')),
                ('report_submission_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Admin yang menyetujui permintaan.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_fund_requests', to=settings.AUTH_USER_MODEL)),
                ('emergency_event', models.ForeignKey(help_text='Kejadian darurat terkait permintaan dana ini.', on_delete=django.db.models.deletion.CASCADE, related_name='fund_requests', to='emergency.emergencyevent')),
                ('faskes', models.ForeignKey(help_text='Fasilitas Kesehatan yang mengajukan dana.', on_delete=django.db.models.deletion.CASCADE, related_name='fund_requests', to='authentication.faskes')),
            ],
            options={
                'verbose_name': 'Permintaan Dana Darurat',
                'verbose_name_plural': 'Permintaan Dana Darurat',
                'ordering': ['-request_date'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability_notes', models.TextField(blank=True, help_text='Contoh: Tersedia penuh mulai besok, atau hanya akhir pekan, atau setiap hari setelah jam 5 sore.', null=True)),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Menunggu Review'), ('APPROVED', 'Disetujui'), ('REJECTED', 'Ditolak'), ('DEPLOYED', 'Sedang Bertugas'), ('COMPLETED', 'Selesai Bertugas'), ('CANCELLED', 'Dibatalkan oleh Relawan')], default='PENDING', max_length=20)),
                ('assigned_task_detail', models.TextField(blank=True, help_text='Detail tugas spesifik yang diberikan oleh admin.', null=True)),
                ('assigned_location_detail', models.CharField(blank=True, help_text='Detail lokasi penugasan spesifik (jika berbeda dari lokasi umum event).', max_length=255, null=True)),
                ('deployment_start_time', models.DateTimeField(blank=True, null=True)),
                ('deployment_end_time', models.DateTimeField(blank=True, null=True)),
                ('admin_application_notes', models.TextField(blank=True, help_text='Catatan dari admin terkait aplikasi/penugasan ini.', null=True)),
                ('emergency_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_applications', to='emergency.emergencyevent')),
                ('task_categories_preference', models.ManyToManyField(blank=True, help_text='Pilih satu atau lebih kategori tugas yang diminati.', to='emergency.taskcategory')),
                ('volunteer_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='emergency.volunteerprofile')),
            ],
            options={
                'verbose_name': 'Aplikasi Relawan',
                'verbose_name_plural': 'Aplikasi Relawan',
                'ordering': ['-application_date'],
                'unique_together': {('emergency_event', 'volunteer_profile')},
            },
        ),
    ]
